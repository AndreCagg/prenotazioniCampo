/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.prenotazionicampo;

import javax.swing.*;
import java.io.*;
import java.time.*;
import java.time.format.DateTimeFormatter;
import java.util.*;

/**
 *
 * @author caggi
 */
public class PlayerList extends javax.swing.JFrame {

    private Giocatore[] vet;
    String elenco = "";
    ArrayList<Giocatore> presenti = new ArrayList<Giocatore>();

    /**
     * Creates new form PlayerList
     */
    public PlayerList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        disponibili = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        inseriti = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCod = new javax.swing.JTextField();
        aggCod = new javax.swing.JButton();
        err = new javax.swing.JTextField();
        elimina = new javax.swing.JButton();
        conf = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        disponibili.setEditable(false);
        disponibili.setColumns(20);
        disponibili.setRows(5);
        disponibili.setNextFocusableComponent(txtCod);
        jScrollPane1.setViewportView(disponibili);

        inseriti.setEditable(false);
        inseriti.setColumns(20);
        inseriti.setRows(5);
        jScrollPane2.setViewportView(inseriti);

        jLabel1.setText("GIOCATORI INSERITI:");

        jLabel2.setText("ANAGRAFICHE DISPONIBILI:");

        jLabel3.setText("COD. GIOCATORE ");

        aggCod.setText("AGGIUNGI");
        aggCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggCodActionPerformed(evt);
            }
        });

        err.setEditable(false);
        err.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N

        elimina.setText("ELIMINA");
        elimina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminaActionPerformed(evt);
            }
        });

        conf.setText("CONFERMA");
        conf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(53, 53, 53))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(aggCod, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(elimina, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(conf, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(err, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aggCod)
                            .addComponent(elimina))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(err, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(conf, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Integer dim = 0, j = 0;
        Giocatore vet[];

        dim = this.counter();
        String s = "", ogg = "", p = "";
        Character c;
        Boolean b = false;

        try {
            TextFile f = new TextFile("giocatori/giocatori.txt", 'R');
            vet = new Giocatore[dim];

            for (Integer i = 0; i < dim; i++) {
                s = f.fromFile();

                //recupero il nome
                if (s.contains(";")) {
                    p = s.substring(0, s.indexOf(";"));
                }

                //apro il file del giocatore
                TextFile giocatore = new TextFile("giocatori/" + p + this.getCog(s, ";") + ".txt", 'R');
                ogg = giocatore.fromFile();

                //popolo l'array con i giocatori
                String[] dati = ogg.split(";");
                Giocatore g = new Giocatore(dati[0], dati[1], dati[2], Boolean.parseBoolean(dati[3]), dati[4], Boolean.parseBoolean(dati[5]), dati[6], Integer.parseInt(dati[7]));
                vet[i] = g;
                giocatore.closeFile('R');

            }

            f.closeFile('R');

            disponibili.setText(this.createList(this.playerSort(vet)));
            disponibili.setCaretPosition(0);

            //vettore da passare al setter
            Giocatore[] set = new Giocatore[this.counter()];

            //copia dei vettori
            for (Integer i = 0; i < set.length; i++) {
                set[i] = vet[i];
            }

            this.setVet(set);
        } catch (IOException e) {
err.setText("errore di I/O");

        }
    }//GEN-LAST:event_formWindowOpened

    public void setVet(Giocatore[] vet) {
        this.vet = vet;
    }

    public Giocatore[] getVet() {
        return this.vet;
    }


    private void aggCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggCodActionPerformed
        // TODO add your handling code here:
        String s;
        Integer cod;
        Giocatore g = new Giocatore();

        try {
            s = txtCod.getText();
            cod = Integer.parseInt(s);

            g = this.searchPlayer(this.getVet(), cod);

            if (g != null) {
                presenti.add(g);
                elenco = "";
                for (Integer i = 0; i < presenti.size(); i++) {
                    if (presenti.get(i) != null) {
                        elenco += presenti.get(i).toString() + "\n--------------------\n";
                    }
                }
                inseriti.setText(elenco);
                err.setText("");

            }

        } catch (NumberFormatException e) {
            err.setText("formato codice errato");
        }
        try {
            Thread.sleep(200);
            txtCod.setText("");
        } catch (InterruptedException e) {

        }
    }//GEN-LAST:event_aggCodActionPerformed

    private void eliminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminaActionPerformed
        // TODO add your handling code here:
        String s;
        Integer cod;
        Giocatore g = new Giocatore();
        Boolean b = false, trovato = false;

        try {
            s = txtCod.getText();
            cod = Integer.parseInt(s);

            //controllo che sia presente nell arraylist ed elimino
            for (Integer i = 0; i < presenti.size(); i++) {
                if (presenti.get(i).getCode().equals(cod)) {

                    presenti.remove(presenti.get(i));

                    b = true;
                }
            }
            if (!b) {
                err.setText("err 2 - codice non trovato");
            }

            //stampa elenco
            elenco = "";
            for (Integer i = 0; i < presenti.size(); i++) {
                if (presenti.get(i) != null) {
                    elenco += presenti.get(i).toString() + "\n--------------------\n";
                }
            }

            inseriti.setText(elenco);
            err.setText("");

            //}
        } catch (NumberFormatException e) {
            err.setText("err 1 - formato codice errato");
        }
        try {
            Thread.sleep(200);
            txtCod.setText("");
        } catch (InterruptedException e) {

        }

    }//GEN-LAST:event_eliminaActionPerformed

    private void confActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confActionPerformed
        // TODO add your handling code here:
        Start st=new Start();
        
        String s="";
        try{
            TextFile f=new TextFile("partite/tmp.txt",'W');
            //System.out.println(presenti.size());
            for(Integer i=0;i<presenti.size();i++){
                s+=presenti.get(i).getCognome()+";"+presenti.get(i).getNome()+"\n";
            }
            f.toFile(s);
            f.closeFile('W');
            
            //scrittura su file dell svvenuto inserimento
            TextFile ok=new TextFile("settings/inseriti.txt",'W');
            ok.toFile("true");
            ok.closeFile('W');
            
        }catch(IOException e){
            err.setText("errore di I/O");
        }
        this.setVisible(false);
    }//GEN-LAST:event_confActionPerformed

    private Giocatore searchPlayer(Giocatore[] vet, Integer cod) {
        Giocatore g = new Giocatore();
        Boolean b = false;

        for (Integer i = 0; i < vet.length; i++) {
            if (vet[i].getCode().toString().equals(cod.toString())) {
                g = vet[i];
                b = true;
            }
        }
        if (!b) {
            err.setText("err 2 - codice non trovato");
            g = null;
        }
        return g;
    }

    private Giocatore[] playerSort(Giocatore[] vet) {
        Giocatore app;
        Character fst, snd;
        Integer x1, x2;

        for (Integer i = 0; i < vet.length - 1; i++) {
            fst = vet[i].getCognome().toUpperCase().charAt(0);
            snd = vet[i + 1].getCognome().toUpperCase().charAt(0);

            x1 = fst - 65;
            x2 = snd - 65;

            if (x1 > x2) {
                app = vet[i];
                vet[i] = vet[i + 1];
                vet[i + 1] = app;

            }
        }
        return vet;
    }

    //recupero cognome giocatore
    private String getCog(String s, String p) {
        String x = "", app;
        Boolean b = false;
        for (Integer i = s.indexOf(";") + 1; i < s.length() && !b; i++) {
            app = Character.toString(s.charAt(i));
            if (!app.equals(p)) {
                x += app;
            } else {
                b = true;
            }

        }
        return x;
    }

    private String createList(Giocatore[] vet) {
        String s = "";
        for (Integer i = 0; i < vet.length; i++) {
            s += vet[i].toString() + "\n--------------------\n";
        }

        return s;
    }

    private Integer counter() {
        Integer i = -1;
        String s = "";
        try {
            TextFile f = new TextFile("giocatori/giocatori.txt", 'R');

            while (!s.equalsIgnoreCase("| ERRORE |")) {
                s = f.fromFile();
                i++;
            }
            f.closeFile('R');
        } catch (IOException e) {

        }
        return i;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayerList().setVisible(true);

            }
        }
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aggCod;
    private javax.swing.JButton conf;
    private javax.swing.JTextArea disponibili;
    private javax.swing.JButton elimina;
    private javax.swing.JTextField err;
    private javax.swing.JTextArea inseriti;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCod;
    // End of variables declaration//GEN-END:variables
}
